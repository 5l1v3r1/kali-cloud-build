#!/bin/bash
fstab=$imagedir/etc/fstab
mount_entry=`mount | grep $imagedir || true`
if [ -z "$mount_entry" ]; then
	die \
		"Could not determine $imagedir file system type for $fstab" \
		"You'll need to manually create $fstab"
fi

type=`echo $mount_entry | cut -f5 -d' '`
cat >$fstab <<EOF
/dev/xvda1 /     $type    defaults 1 1
/dev/xvda3 swap  swap    defaults 0 0
none      /proc proc    defaults 0 0
none      /sys  sysfs   defaults 0 0
EOF

echo "Unmounting the volume"
umount -l $imagedir

echo "Detaching the volume"
detachment_status=`ec2-detach-volume $volume_id | grep 'available' || true`
while [ -z "$detachment_status" ]; do
	echo "Waiting for volume to finish detaching"
	sleep 5
	detachment_status=`ec2-describe-volumes | grep "VOLUME[[:blank:]]*$volume_id.*available" || true`
done

if [ $arch = 'amd64' ]; then
	aki="aki-4feec43b"
elif [ $arch = 'i386' ]; then
	aki="aki-4deec439"
fi

echo "Creating snapshot of the EBS volume"
snapshot=`ec2-create-snapshot $volume_id`
[ -z "$snapshot" ] && die "Unable to create snapshot from the volume '$volume_id'"
snapshot_id=`echo $snapshot | awk '{print $2}'`
snapshot_status=`echo $snapshot | grep 'completed' || true`
while [ -z "$snapshot_status" ]; do
	echo "Waiting for snapshot to be completed"
	sleep 5
	snapshot_status=`ec2-describe-snapshots | grep "$snapshot_id.*completed" || true`
done

echo "Deleting the volume"
ec2-delete-volume $volume_id || true

ami_name="$distribution-$codename-$arch-$(date +%Y%m%d)"
echo "Registering the snapshot '$snapshot_id' as an AMI"
ami_id=`ec2-register \
	--name "$ami_name" --description "$description" \
	--architecture "$bundlearch" --kernel "$aki" \
	--snapshot "$snapshot_id" | awk '{print $2}'`
[ -z "$ami_id" ] && die "Unable to register the snapshot as an AMI"
echo "Your AMI has been created with the ID $ami_id"
